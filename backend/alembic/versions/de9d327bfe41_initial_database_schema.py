"""Initial database schema

Revision ID: de9d327bfe41
Revises: 
Create Date: 2025-09-05 01:25:08.734577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de9d327bfe41'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gym_classes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', name='difficultylevel'), nullable=True),
    sa.Column('schedule', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gym_classes_name'), 'gym_classes', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'TRAINER', 'CLIENT', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('persons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('passport', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('medical_fit_url', sa.String(), nullable=True),
    sa.Column('profile_img_url', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_persons_name'), 'persons', ['name'], unique=False)
    op.create_index(op.f('ix_persons_passport'), 'persons', ['passport'], unique=True)
    op.create_index(op.f('ix_persons_surname'), 'persons', ['surname'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cuil', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['persons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teachers_cuil'), 'teachers', ['cuil'], unique=True)
    op.create_table('memberships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plan', sa.Enum('BASIC', 'PLUS', 'PREMIUM', name='membershipplan'), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_check_in', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_invoice_id', sa.String(), nullable=True),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id')
    )
    op.create_table('teacher_class_association',
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('gym_class_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['gym_class_id'], ['gym_classes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teacher_id', 'gym_class_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_class_association')
    op.drop_table('memberships')
    op.drop_index(op.f('ix_teachers_cuil'), table_name='teachers')
    op.drop_table('teachers')
    op.drop_table('clients')
    op.drop_index(op.f('ix_persons_surname'), table_name='persons')
    op.drop_index(op.f('ix_persons_passport'), table_name='persons')
    op.drop_index(op.f('ix_persons_name'), table_name='persons')
    op.drop_table('persons')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_gym_classes_name'), table_name='gym_classes')
    op.drop_table('gym_classes')
    # ### end Alembic commands ###
