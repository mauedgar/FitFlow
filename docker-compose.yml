services:
  # --- NUEVO SERVICIO BACKEND ---
  backend:
    build: . # Le dice a Docker que construya la imagen usando el Dockerfile en el directorio actual
    container_name: fitflow-backend-1
    command: /app/start.sh # El comando para iniciar
    volumes:
      - ./backend:/app # Monta tu código local en el contenedor para desarrollo en vivo
    ports:
      - "8000:8000" # Mapea el puerto 8000 del contenedor a tu máquina
    environment:
      - DATABASE_URL=postgresql://fitflow_admin:159753Lu@fitflow_postgres:5432/fitflow_db
    networks:
      - fitflow_network
    depends_on:
      - postgres # Se asegura de que el contenedor de postgres se inicie antes que el backend
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fitflow_postgres
    restart: always
    environment:
      POSTGRES_DB: fitflow_db
      POSTGRES_USER: fitflow_admin
      POSTGRES_PASSWORD: 159753Lu
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fitflow_network

  # Adminer para gestión de base de datos (opcional pero útil)
  adminer:
    image: adminer
    container_name: fitflow_adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - fitflow_network
    depends_on:
      - postgres

volumes:
  postgres_data:

networks:
  fitflow_network:
    driver: bridge